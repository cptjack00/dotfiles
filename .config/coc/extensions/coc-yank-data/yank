c0b967d241d26b2fb292d0aa48a30736|file:///home/quang/.config/nvim/coc-settings.json|45|35|V|json
	  // "python.linting.pylintPath": "~/.miniconda/envs/neovim/bin/pylint",
	  // "python.condaPath": "~/.miniconda/bin/conda",
7ac3a83122fbf70fb824b7333514e42b|file:///home/quang/.config/nvim.orig/general/settings.vim|42|1|V|vim
	" Vim-airline
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tabline#left_sep = ''
	let g:airline#extensions#tabline#left_alt_sep = ''
	let g:airline#extensions#tabline#right_sep = ''
	let g:airline#extensions#tabline#right_alt_sep = ''
	let g:airline_detect_modified=1
	let g:airline_detect_paste=1
	let g:airline_theme='oceanicnext'
	" unicode symbols
	let g:airline_powerline_fonts = 1
	if !exists('g:airline_symbols')
	    let g:airline_symbols = {}
	endif
	let g:airline_left_sep = ''
	let g:airline_left_alt_sep = ''
	let g:airline_right_sep = ''
	let g:airline_right_alt_sep = ''
	let g:airline_symbols.branch = ''
	let g:airline_symbols.readonly = ''
	let g:airline_symbols.linenr = '☰'
	let g:airline_symbols.maxlinenr = ''
	let g:airline_symbols.dirty='⚡'
90223312b974310ee80f66cc802ba0cd|file:///home/quang/.config/nvim.orig/vim-plug/plugins.vim|11|1|V|vim
	    Plug 'mhartington/oceanic-next'    
0cf31b2c283ce3431794586df7b0996d|file:///home/quang/.config/nvim/vim-plug/plugins.vim|155|4|V|vim
	    
ab6a2774e6c72db3a8d8ec2275a64bbe|file:///home/quang/.config/nvim.orig/general/settings.vim|31|1|V|vim
	let g:oceanic_next_terminal_bold = 1
	let g:oceanic_next_terminal_italic = 1
	colorscheme OceanicNext
643b13a8c525a9db128fefe776793612|terminal:9|38|1|V|
	Proceed ([y]/n)?
21349ff2f4ce7a451ee261ce0a7f924d|file:///home/quang/.config/nvim/coc-settings.json|48|25|v|json
	.miniconda
4f50d1a62b19c31bf3647c756e0481e0|file:///home/quang/test.py|1|1|v|python
	Dimport 
cf4339e5dad26c57bbf32fa9c427d4f6|file:///home/quang/test.py|1|1|V|python
	import numpy
3dc9f446025a62e5822940248b540da1|file:///home/quang/test.py|1|1|V|python
	impo
8617a6c09eb76d9882db8ee31a420654|file:///home/quang/test.py|1|1|V|python
	import 
c1c425268e68385d1ab5074c17a94f14|file:///home/quang/test.py|1|5|v|python
	function
63a6588f34b4ed2c38a85b621edb81bd|file:///home/quang/test.py|1|1|V|python
	def Vjj(arg1):
	    """TODO: Docstring for Vjj.
	
	    :function: TODO
	    :returns: TODO
	
	    """
	    
2f81aaa09ee308350cc6ef603b6ba8e3|file:///home/quang/.config/nvim/themes/airline.vim|27|1|V|vim
	let g:airline_left_sep = ''
	let g:airline_right_sep = ''
	let g:airline_right_alt_sep = ''
9e771f3ab95b0f1b3004c7e6a2fcde82|file:///home/quang/test.py|3|1|V|python
	ImportWarning
0c2ce2686320c5cdb3f16467ce9a2c33|file:///home/quang/.config/nvim.orig/vim-plug/plugins.vim|20|1|V|vim
	    Plug 'majutsushi/tagbar'
	    Plug 'junegunn/fzf'
	    Plug 'jmcantrell/vim-virtualenv'
	    Plug 'edkolev/promptline.vim'
	    Plug 'zefei/vim-wintabs'
	    Plug 'zefei/vim-wintabs-powerline'
	    Plug 'xuyuanp/nerdtree-git-plugin'
e8592f592975beda994b8376c67aa27e|file:///home/quang/.config/nvim.orig/vim-plug/plugins.vim|4|1|V|vim
	    " File Explorer
	    Plug 'scrooloose/NERDTree'
	    " Auto pairs for '(' '[' '{'
	    Plug 'jiangmiao/auto-pairs'
4a46d31228ea4cdb5cb058ece1006ca4|file:///home/quang/.config/nvim.orig/keys/mappings.vim|42|1|V|vim
	"NERDTree
	nnoremap <Leader>nn :NERDTreeToggle<CR>
	nnoremap <Leader>cd :NERDTreeCWD<CR>
	nnoremap <Leader>rf :NERDTreeRefreshRoot<CR>
	
	
	"NERDCommenter
	nmap gcc <Plug>NERDCommenterToggle
	vmap gc <Plug>NERDCommenterToggle
	
	"Easymotion
	map  / <Plug>(easymotion-sn)
	omap / <Plug>(easymotion-tn)
	map  n <Plug>(easymotion-next)
	map  N <Plug>(easymotion-prev)
	map <Leader>j <Plug>(easymotion-j)
	map <Leader>k <Plug>(easymotion-k)
	map <Leader>l <Plug>(easymotion-lineforward)
	map <Leader>h <Plug>(easymotion-linebackward)
	
	
	"Tagbar
	nnoremap <silent> <F8> :TagbarToggle<CR>
c444858e0aaeb727da73d2eae62321ad|file:///home/quang/.config/nvim/keys/which-key.vim|14|11|v|vim
	leader
bc60fc6173e0605ef9cf670956bdbd8c|file:///home/quang/.config/nvim/keys/mappings.vim|90|1|V|vim
	"NERDCommenter
	nmap gcc <Plug>NERDCommenterToggle
013603147fb082f4978531762c5242bc|file:///home/quang/.config/nvim/keys/mappings.vim|90|1|V|vim
	"NERDCommenter
	nmap gcc <Plug>NERDCommenterToggle
	vmap gc <Plug>NERDCommenterToggle
3e505b703ed64f68a8060e103503f61f|file:///home/quang/.config/nvim/keys/which-key.vim|2|1|V|vim
	let g:mapleader = ","
bef00d5c07ca482e0dd19612143831a4|file:///home/quang/.config/nvim/keys/mappings.vim|8|1|V|vim
	let g:mapleader=","
f4a03c917e66da24368d01bbff886d96|file:///home/quang/.config/nvim/keys/mappings.vim|7|1|V|vim
	" g Leader key
c64558f489581fc627677d017b91e4c1|file:///home/quang/.config/nvim/keys/which-key.vim|1|1|V|vim
	" Leader Key Maps
508d0b04954a859281289ca3716fd3d1|file:///home/quang/.config/nvim/keys/which-key.vim|37|31|v|vim
	:CocCommand explorer
672b6c5dec4aa32fc40e1f8b19331f6f|file:///home/quang/.config/nvim/keys/mappings.vim|82|1|V|vim
	"NERDTree
	nnoremap <Leader>nn :NERDTreeToggle<CR>
	nnoremap <Leader>cd :NERDTreeCWD<CR>
	nnoremap <Leader>rf :NERDTreeRefreshRoot<CR>
4986baeb6dd4b6f967830a4d8d1eba44|file:///home/quang/.config/nvim/keys/mappings.vim|87|1|V|vim
	" map  n <Plug>(easymotion-next)
	" map  N <Plug>(easymotion-prev)
527aa26b2bb299c430776510e3f90686|file:///home/quang/test.py|1|1|V|python
	import parser
	import 
	import panda
81f668131ac9fddf106d07439a442ce5|file:///home/quang/.config/nvim/coc-settings.json|76|1|V|json
	"languageserver": {
	"bash": {
	  "command": "bash-language-server",
	  "args": ["start"],
	  "filetypes": ["sh"],
	  "ignoredRootPaths": ["~"]
	  }
	}
c13a15ba09da210f1924cfd1a7187865|file:///home/quang/.zshrc|129|1|V|zsh
	if [[ condition ]]; then
9e8536a29a4e181be7f9657e2182f80d|file:///home/quang/handsonml/test.py|1|1|V|python
	import sklearn.preprocessing
8ff344862b56fbf2c3ab513b1f69ff8f|file:///home/quang/handsonml/test.py|1|1|V|python
	from sklearn.preprocessing import i
718fd0a4dfcee809a60b5a26a65b5b70|file:///home/quang/.config/nvim/init.vim|27|1|V|vim
	  source $HOME/.config/nvim/themes/nvcode.vim
a31a62f02f0d0252a64a990f276998b9|file:///home/quang/.config/alacritty/alacritty.yml|1|3|V|yaml
	  - { key: N, mods: Control, action: SpawnNewInstance }
342b4f3da3fc8c16abe9dce19774efbd|file:///home/quang/.config/nvim/plug-config/start-screen.vim|15|79|V|vim
	                                                                               
d171e7a3ed921e7d8c8853d5324119c2|file:///home/quang/.config/nvim/plug-config/start-screen.vim|2|1|V|vim
	let g:startify_custom_header = [
	        \ '        _   ___    ________          __   ',
	        \ '       / | / / |  / / ____/___  ____/ /__ ',
	        \ '      /  |/ /| | / / /   / __ \/ __  / _ \',
	        \ '     / /|  / | |/ / /___/ /_/ / /_/ /  __/',
	        \ '    /_/ |_/  |___/\____/\____/\__,_/\___/ ',
	        \]
d3dd0d7c4008938cbe5edbf9e2698a26|file:///home/quang/.config/nvim/plug-config/start-screen.vim|3|1|V|vim
	            \'  ___  _   _   _    _   _  ____   ____  _____ ____    _____ ____      _    ___',
	            \' / _ \| | | | / \  | \ | |/ ___| |  _ \| ____|  _ \  |_   _|  _ \    / \  |_ _|',
	            \'| | | | | | |/ _ \ |  \| | |  _  | | | |  _| | |_) |   | | | |_) |  / _ \  | |', 
	            \'| |_| | |_| / ___ \| |\  | |_| | | |_| | |___|  __/    | | |  _ <  / ___ \ | |', 
	            \' \__\_\\___/_/   \_\_| \_|\____| |____/|_____|_|       |_| |_| \_\/_/   \_\___|',
621f31a5b488b35a0a7b20d0cf0649c2|file:///home/quang/.config/nvim/plug-config/start-screen.vim|33|1|V|vim
	let g:startify_bookmarks = [
	            \ { 'c': '~/.config/i3/config' },
	            \ { 'i': '~/.config/nvim/init.vim' },
	            \ { 'z': '~/.zshrc' },
	            \ '~/Blog',
	            \ '~/Code',
	            \ '~/Pics',
	            \ ]
5eb6387c3cd9a40fb65e3a4b8450daa5|file:///home/quang/.config/nvim/plug-config/fzf.vim|16|1|V|vim
	" nnoremap <leader>g :Rg<CR>
93473a7344419b15c4219cc2b6c64c6f|file:///home/quang/test.py|1|1|V|python
	import
040c6d471900d2095a305ccde200ba45|file:///home/quang/test.py|1|8|v|python
	skle
c40a8ea4490c58eae63034627656ba6b|file:///home/quang/test.py|1|1|V|python
	import sklearn
0d5f4d0edbedbf78aea41650c03b4991|file:///home/quang/test.py|2|1|V|python
	import sklearn.p
038069b36b3fc9a1723a739be3c4ecd8|file:///home/quang/test.py|1|1|V|python
	import numpy
	import sklearn.preproces
	import sklearn.preprocessing impo
3356685ead6b0ffc5297fee354e2a904|file:///home/quang/.config/nvim/general/settings.vim|58|13|v|vim
	OceanicNext
5ccb242b8f5c4dd2ccd17e9b014b3791|file:///home/quang/test.py|1|1|V|python
	import sklearn.model_selection impor
242aee5bb0609fa6ba85eff2d9aab445|file:///home/quang/.config/nvim/general/settings.vim|1|1|V|vim
	colorscheme OceanicNext
55caae93556ebc9d88ca5b5c013a52ee|file:///home/quang/.config/nvim/plug-config/vim-airline.vim|9|1|V|vim
	let g:airline_theme='oceanicnext'
3cbf3d33f730faed3aa7a43be0ff2fdc|file:///home/quang/.config/nvim/general/settings.vim|57|13|v|vim
	nvcode
0fe093ae7fbdfefbf0b2a597c9a220be|file:///home/quang/.config/nvim/general/settings.vim|57|13|v|vim
	colorscheme
d338392cf5eb97061f0324bdb1d0f2f8|file:///home/quang/test.py|1|1|V|python
	import sklearn.model_selection 
	import abc
	
	def 
5cb27343a8310f17a3e4467d9abddb63|file:///home/quang/.config/nvim/themes/material.vim|8|1|V|vim
	colorscheme         
2f301c946ef52820424325bd710650fe|file:///home/quang/handsonml/test.py|1|1|V|python
	from sklearn.linear_model import LinearRegression
	from statistics import stdev
	import matplotlib
1c7f2e6a795936aaad1a1a6ac13c7382|file:///home/quang/.config/alacritty/alacritty.yml|61|1|V|yaml
	scrolling:
	  # Maximum number of lines in the scrollback buffer.
	  # Specifying '0' will disable scrolling.
	  history: 10000
	
	  # Number of lines the viewport will move for every line scrolled when
	  # scrollback is enabled (history > 0).
	  multiplier: 10
f847b74b39d7523dca6483643313a2cd|file:///home/quang/.config/alacritty/alacritty.yml|63|1|V|yaml
	draw_bold_text_with_bright_colors: true
11d8c8ac0be686dfee06f993a096af0c|file:///home/quang/.config/alacritty/alacritty.yml|207|1|V|yaml
	# Colors
	colors:
	  # Default colours
	  primary:
	    background: '0xffffff'
	    foreground: '0x2e2e2d'
	
	  # Colors that should be used to draw the terminal cursor. If these are unset,
	  # the cursor colour will be the inverse of the cell colour.
	  # cursor:
	  #   text: '0x2e2e2d'
	  #   # text: '0x000000'
	  #   cursor: '0xffffff'
	
	  # Normal colors
	  normal:
	    black:   '0x000000'
	    red:     '0xc62828'
	    green:   '0x558b2f'
	    yellow:  '0xf9a825'
	    blue:    '0x1565c0'
	    magenta: '0x6a1e9a'
	    cyan:    '0x00838f'
	    white:   '0xf2f2f2'
	
	  # Bright colors
	  bright:
	    black:   '0x545454'
	    red:     '0xef5350'
	    green:   '0x8bc34a'
	    yellow:  '0xffeb3b'
	    blue:    '0x64b5f6'
	    magenta: '0xba68c8'
	    cyan:    '0x26c6da'
	    white:   '0xe0e0e0'
	
	  # Dim colors (Optional)
	  dim:
	    black:   '0x333333'
	    red:     '0xf2777a'
	    green:   '0x99cc99'
	    yellow:  '0xffcc66'
	    blue:    '0x6699cc'
	    magenta: '0xcc99cc'
	    cyan:    '0x66cccc'
	    white:   '0xdddddd'
	
	  # Tomorrow Night Bright
	  # primary:
	  #   background: '0x000000'
	  #   foreground: '0xeaeaea'
	  #
	  # cursor:
	  #   text: '0x000000'
	  #   cursor: '0xffffff'
	  #
	  # normal:
	  #   black:   '0x000000'
	  #   red:     '0xd54e53'
	  #   green:   '0xb9ca4a'
	  #   yellow:  '0xe6c547'
	  #   blue:    '0x7aa6da'
	  #   magenta: '0xc397d8'
	  #   cyan:    '0x70c0ba'
	  #   white:   '0xffffff'
	  #
	  # bright:
	  #   black:   '0x666666'
	  #   red:     '0xff3334'
	  #   green:   '0x9ec400'
	  #   yellow:  '0xe7c547'
	  #   blue:    '0x7aa6da'
	  #   magenta: '0xb77ee0'
	  #   cyan:    '0x54ced6'
	  #   white:   '0xffffff'
	
	  # Indexed Colors
	  #
	  # The indexed colors include all colors from 16 to 256.
	  # When these are not set, they're filled with sensible defaults.
	  #
	  # Example:
	  #   `- { index: 16, color: '0xff00ff' }`
	  #
	  indexed_colors: []
	
68934a3e9455fa72420237eb05902327|file:///home/quang/.config/alacritty/alacritty.yml|201|36|v|yaml
	false
5607d28f11aa7736d607f3fea45fbb9a|file:///home/quang/.config/alacritty/alacritty.yml|234|1|V|yaml
	# Background opacity
	background_opacity: 1.0
a1b9c1812fc79ee0cfcd62212165ef96|file:///home/quang/.config/alacritty/alacritty.yml|145|1|V|yaml
	# Font configuration (changes require restart)
	font:
	  # The normal (roman) font face to use.
	  # Style can be specified to pick a specific face.
	  normal:
	    family: Iosevka
	    # family: "Fira Code"
	    # family: "Source Code Pro"
	    # style: Retina
	
	  # The bold font face
	  bold:
	    family: Iosevka
	    # family: "Fira Code"
	    # family: "Source Code Pro"
	
	  # The italic font face
	  italic:
	    family: Iosevka
	    # family: "Fira Code"
	    # family: "Source Code Pro"
	    # style: "Medium Italic"
	
	  # Point size of the font
	  size: 14.0
	
	  # Offset is the extra space around each character. offset.y can be thought of
	  # as modifying the linespacing, and offset.x as modifying the letter spacing.
	  offset:
	    x: 0
	    y: 0
	
	  # Glyph offset determines the locations of the glyphs within their cells with
	  # the default being at the bottom. Increase the x offset to move the glyph to
	  # the right, increase the y offset to move the glyph upward.
	  glyph_offset:
	    x: 0
	    y: 0
	
	  # Thin stroke font rendering (macOS only)
	  #
	  # Thin strokes are suitable for retina displays, but for non-retina you
	  # probably want this set to false.
	  #
	  # macOS >= 10.14.x:
	  #
	  # If the font quality on non-retina display looks bad then set
	  # `use_thin_strokes` to `true` and enable font smoothing by running the
	  # following command:
	  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
	  #
	  # This is a global setting and will require a log out or restart to take
	  # effect.
	  use_thin_strokes: true
	
	# When true, bold text is drawn using the bright variant of colors.
	draw_bold_text_with_bright_colors: true
	
	# Use custom cursor colors. If true, display the cursor in the cursor.foreground
	# and cursor.background colors, otherwise invert the colors of the cursor.
	# custom_cursor_colors: false
	
	# Visual Bell
	#
	# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
	# rung, the terminal background will be set to white and transition back to the
	# default background color. You can control the rate of this transition by
	# setting the `duration` property (represented in milliseconds). You can also
	# configure the transition function by setting the `animation` property.
	#
	# Possible values for `animation`
	# `Ease`
	# `EaseOut`
	# `EaseOutSine`
	# `EaseOutQuad`
	# `EaseOutCubic`
	# `EaseOutQuart`
	# `EaseOutQuint`
	# `EaseOutExpo`
	# `EaseOutCirc`
	# `Linear`
	#
	# To completely disable the visual bell, set its duration to 0.
	#
d59347cf63a12bf7c581bae77387363b|file:///home/quang/.config/alacritty/alacritty.yml|34|14|v|yaml
	Hack
a2dea40f00694ab112bd9ae5d785129e|file:///home/quang/.config/alacritty/alacritty.yml|70|23|v|yaml
	Control|Shift,
2a008a6a997ee8476d65c56332b319ca|file:///home/quang/.config/alacritty/alacritty.yml|245|34|v|yaml
	,mmand
965933109ae91714b9231e361b244411|file:///home/quang/.config/alacritty/alacritty.yml|242|34|v|yaml
	,ommand
ee97be03cb04119af45014d815621ce1|file:///home/quang/.config/alacritty/alacritty.yml|253|25|v|yaml
	Command
ea2459317b2c68045fde9fcf1a5a15b2|file:///home/quang/.config/alacritty/alacritty.yml|34|14|v|yaml
	Fira Code
1ffe3cd490340bb2fb824a03fc01dffb|file:///home/quang/.config/nvim/general/functions.vim|11|1|V|vim
	let t:is_transparent = 0                                                                        
	function! Toggle_transparent_background()                                                       
	  if t:is_transparent == 0                                                                      
	    hi Normal guibg=NONE ctermbg=NONE                                                       
	    let t:is_transparent = 1                                                                    
	  else                                                                                          
	    hi Normal guibg=NONE ctermbg=NONE                                                           
	    let t:is_transparent = 0                                                                    
	  endif                                                                                         
	endfunction                                                                                     
	nnoremap <M><CR> :call Toggle_transparent_background()<CR>
f21a0c34ccba9634818c59e16b133967|file:///home/quang/.config/nvim/general/functions.vim|21|14|v|vim
	CR> :call Toggle_transparent_background()<CR>
7caf4f09db22123856d7270d04913d16|file:///home/quang/.config/nvim/general/functions.vim|11|1|V|vim
	let t:is_transparent = 0                                                                        
929f5e0d5ed9d0d42800be541071a74c|file:///home/quang/.config/nvim/general/settings.vim|58|13|V|vim
	colorscheme material 
4da0460ef19a14829523c62e2a831406|file:///home/quang/.config/nvim/syntax/java.vim|179|1|V|vim
	""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
	
e0b3869c924e368a0faaf6b71eace75c|file:///home/quang/.config/alacritty/alacritty_old.yml|1|1|V|yaml
	colors:
	  # Default colors
	  primary:
	    background: "#1e2127"
	    # background: "#2E3440"
	    foreground: "#D8DEE9"
	
	  # Normal colors
	  normal:
	    black: "#3B4252"
	    red: "#BF616A"
	    green: "#A3BE8C"
	    yellow: "#EBCB8B"
	    blue: "#81A1C1"
	    magenta: "#B48EAD"
	    cyan: "#88C0D0"
	    white: "#abb2bf"
	
	  # Bright colors
	  bright:
	    black: "#5c6370"
	    red: "#e06c75"
	    green: "#98c379"
	    yellow: "#d19a66"
	    blue: "#61afef"
	    magenta: "#c678dd"
	    cyan: "#56b6c2"
	    white: "#ECEFF4"
	
	background_opacity: 0.9
	
	font:
	  normal:
	    family: "Hack"
	    style: Regular
	  bold:
	    family: "Hack"
	    style: Bold
	  italic:
	    family: "Hack"
	    style: Italic
	  bold_italic:
	    family: "Hack"
	    style: Bold Italic
	
	  # Point size
	  size: 9.0
	
	  offset:
	    x: 0
	    y: 0
	  glyph_offset:
	    x: 0
	    y: 0
	
	# window:
	#   padding:
	#     x: 2
	#     y: 2
	
	# If `true`, bold text is drawn using the bright color variants.
	
	# selection:
	#   semantic_escape_chars: ',│`|:"'' ()[]{}<>'
	#   save_to_clipboard: true
	
	# live_config_reload: true
	
	# key_bindings:
	#   - { key: V, mods: Control|Shift, action: Paste }
	#   - { key: C, mods: Control|Shift, action: Copy }
	#   - { key: Key0, mods: Control, action: ResetFontSize }
	#   - { key: Equals, mods: Control, action: IncreaseFontSize }
	#   - { key: Add, mods: Control, action: IncreaseFontSize }
	#   - { key: Subtract, mods: Control, action: DecreaseFontSize }
	#   - { key: Minus, mods: Control, action: DecreaseFontSize }
	#   - { key: N, mods: Control, action: SpawnNewInstance }
	
	# Configuration for Alacritty, the GPU enhanced terminal emulator
	
	# Any items in the `env` entry below will be added as
	# environment variables. Some entries may override variables
	# set by alacritty it self.
a9a415485a433131382d901709a20b45|file:///home/quang/.config/alacritty/alacritty_old.yml|84|1|V|yaml
	env:
	  # TERM env customization.
	  #
	  # If this property is not set, alacritty will set it to xterm-256color.
	  #
	  # Note that some xterm terminfo databases don't declare support for italics.
	  # You can verify this by checking for the presence of `smso` and `sitm` in
	  # `infocmp xterm-256color`.
	  TERM: xterm-256color-italic
	
	window:
	  # Window dimensions (changes require restart)
	  #
	  # Specified in number of columns/lines, not pixels. If both are zero this
	  # setting is ignored.
	  dimensions:
	    columns: 100
	    lines: 85
	
	  # Window padding (changes require restart)
	  #
	  # Blank space added around the window in pixels. This padding is not scaled by
	  # DPI and the specified value is always added at both opposing sides.
	  padding:
	    x: 0
	    y: 0
	
	  # Spread additional padding evenly around the terminal content.
	  dynamic_padding: false
	
	  # Window decorations
	  #
	  # Available values:
	  # - full: borders and title bar
	  # - none: neither borders nor title bar
	  # - transparent: title bar, transparent background and title bar buttons
	  # - buttonless: title bar, transparent background, but no title bar buttons
	  decorations: full
	
	  # Startup Mode (changes require restart)
	  #
	  # Values for `startup_mode`:
	  #   - Windowed
	  #   - Maximized
	  #   - Fullscreen
	  #
	  # Values for `startup_mode` (macOS only):
	  #   - SimpleFullscreen
	  startup_mode: Windowed
	
	scrolling:
	  # maximum number of lines in the scrollback buffer. Specifying '0' will
	  # disable scrolling.
	  history: 0
	
	  # Number of lines the viewport will move for every line scrolled when
	  # scrollback is enabled (history > 0).
	  multiplier: 3
	
	bell:
	  animation: EaseOutExpo
	  color: "0xffffff"
	  duration: 0
	
	# Key bindings
	#
	# Key bindings are specified as a list of objects. Each binding will specify a
	# key and modifiers required to trigger it, terminal modes where the binding is
	# applicable, and what should be done when the key binding fires. It can either
	# send a byte sequence to the running application (`chars`), execute a
	# predefined action (`action`) or fork and execute a specified command plus
	# arguments (`command`).
	#
	# Bindings are always filled by default, but will be replaced when a new binding
	# with the same triggers is defined. To unset a default binding, it can be
	# mapped to the `None` action.
	#
	# Example:
	#   `- { key: V, mods: Control|Shift, action: Paste }`
	#
	# Available fields:
	#   - key
	#   - mods (optional)
	#   - chars | action | command (exactly one required)
	#   - mode (optional)
	#
	# Values for `key`:
	#   - `A` -> `Z`
	#   - `F1` -> `F12`
	#   - `Key1` -> `Key0`
	#
	#   A full list with available key codes can be found here:
	#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
	#
	#   Instead of using the name of the keys, the `key` field also supports using
	#   the scancode of the desired key. Scancodes have to be specified as a
	#   decimal number.
	#   This command will allow you to display the hex scancodes for certain keys:
	#     `showkey --scancodes`
	#
	# Values for `mods`:
	#   - Command
	#   - Control
	#   - Option
	#   - Super
	#   - Shift
	#   - Alt
	#
	#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
	#   Whitespace and capitalization is relevant and must match the example.
	#
	# Values for `chars`:
	#   The `chars` field writes the specified string to the terminal. This makes
	#   it possible to pass escape sequences.
	#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
	#   the command `showkey -a` outside of tmux.
	#   Note that applications use terminfo to map escape sequences back to
	#   keys. It is therefore required to update the terminfo when
	#   changing an escape sequence.
	#
	# Values for `action`:
	#   - Paste
	#   - PasteSelection
	#   - Copy
	#   - IncreaseFontSize
	#   - DecreaseFontSize
	#   - ResetFontSize
	#   - ScrollPageUp
	#   - ScrollPageDown
	#   - ScrollLineUp
	#   - ScrollLineDown
	#   - ScrollToTop
	#   - ScrollToBottom
	#   - ClearHistory
	#   - Hide
	#   - Quit
	#   - ClearLogNotice
	#   - SpawnNewInstance
	#   - ToggleFullscreen
	#   - None
	#
	# Values for `action` (macOS only):
	#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
	#
	# Values for `command`:
	#   The `command` field must be a map containing a `program` string and
	#   an `args` array of command line parameter strings.
	#
	#   Example:
	#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
	#
	# Values for `mode`:
	#   - ~AppCursor
	#   - AppCursor
	#   - ~AppKeypad
	#   - AppKeypad
	#
428e22a612a9691a3c088ad9e5f66de3|file:///home/quang/.config/alacritty/alacritty_old.yml|84|1|V|yaml
	env:
	  # TERM env customization.
	  #
	  # If this property is not set, alacritty will set it to xterm-256color.
	  #
	  # Note that some xterm terminfo databases don't declare support for italics.
	  # You can verify this by checking for the presence of `smso` and `sitm` in
	  # `infocmp xterm-256color`.
	  TERM: xterm-256color-italic
14867a919d1200546a4d073a9d76652a|file:///home/quang/.config/alacritty/alacritty_old.yml|94|1|V|yaml
	window:
	  # Window dimensions (changes require restart)
	  #
	  # Specified in number of columns/lines, not pixels. If both are zero this
	  # setting is ignored.
	  dimensions:
	    columns: 100
	    lines: 85
	
	  # Window padding (changes require restart)
	  #
	  # Blank space added around the window in pixels. This padding is not scaled by
	  # DPI and the specified value is always added at both opposing sides.
	  padding:
	    x: 0
	    y: 0
	
	  # Spread additional padding evenly around the terminal content.
	  dynamic_padding: false
	
	  # Window decorations
	  #
	  # Available values:
	  # - full: borders and title bar
	  # - none: neither borders nor title bar
	  # - transparent: title bar, transparent background and title bar buttons
	  # - buttonless: title bar, transparent background, but no title bar buttons
	  decorations: full
	
	  # Startup Mode (changes require restart)
	  #
	  # Values for `startup_mode`:
	  #   - Windowed
	  #   - Maximized
	  #   - Fullscreen
	  #
	  # Values for `startup_mode` (macOS only):
	  #   - SimpleFullscreen
	  startup_mode: Windowed
	
	scrolling:
	  # maximum number of lines in the scrollback buffer. Specifying '0' will
	  # disable scrolling.
	  history: 0
	
	  # Number of lines the viewport will move for every line scrolled when
	  # scrollback is enabled (history > 0).
	  multiplier: 3
	
	bell:
	  animation: EaseOutExpo
	  color: "0xffffff"
	  duration: 0
	
	# Key bindings
	#
	# Key bindings are specified as a list of objects. Each binding will specify a
	# key and modifiers required to trigger it, terminal modes where the binding is
	# applicable, and what should be done when the key binding fires. It can either
	# send a byte sequence to the running application (`chars`), execute a
	# predefined action (`action`) or fork and execute a specified command plus
	# arguments (`command`).
	#
	# Bindings are always filled by default, but will be replaced when a new binding
	# with the same triggers is defined. To unset a default binding, it can be
	# mapped to the `None` action.
	#
	# Example:
	#   `- { key: V, mods: Control|Shift, action: Paste }`
	#
	# Available fields:
	#   - key
	#   - mods (optional)
	#   - chars | action | command (exactly one required)
	#   - mode (optional)
	#
	# Values for `key`:
	#   - `A` -> `Z`
	#   - `F1` -> `F12`
	#   - `Key1` -> `Key0`
	#
	#   A full list with available key codes can be found here:
	#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
	#
	#   Instead of using the name of the keys, the `key` field also supports using
	#   the scancode of the desired key. Scancodes have to be specified as a
	#   decimal number.
	#   This command will allow you to display the hex scancodes for certain keys:
	#     `showkey --scancodes`
	#
	# Values for `mods`:
	#   - Command
	#   - Control
	#   - Option
	#   - Super
	#   - Shift
	#   - Alt
	#
	#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
	#   Whitespace and capitalization is relevant and must match the example.
	#
	# Values for `chars`:
	#   The `chars` field writes the specified string to the terminal. This makes
	#   it possible to pass escape sequences.
	#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
	#   the command `showkey -a` outside of tmux.
	#   Note that applications use terminfo to map escape sequences back to
	#   keys. It is therefore required to update the terminfo when
	#   changing an escape sequence.
	#
	# Values for `action`:
	#   - Paste
	#   - PasteSelection
	#   - Copy
	#   - IncreaseFontSize
	#   - DecreaseFontSize
	#   - ResetFontSize
	#   - ScrollPageUp
	#   - ScrollPageDown
	#   - ScrollLineUp
	#   - ScrollLineDown
	#   - ScrollToTop
	#   - ScrollToBottom
	#   - ClearHistory
	#   - Hide
	#   - Quit
	#   - ClearLogNotice
	#   - SpawnNewInstance
	#   - ToggleFullscreen
	#   - None
	#
	# Values for `action` (macOS only):
	#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
	#
	# Values for `command`:
	#   The `command` field must be a map containing a `program` string and
	#   an `args` array of command line parameter strings.
	#
	#   Example:
	#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
	#
	# Values for `mode`:
	#   - ~AppCursor
	#   - AppCursor
	#   - ~AppKeypad
	#   - AppKeypad
	#
	key_bindings:
	  - { key: V, mods: Control|Shift, action: Paste }
	  - { key: C, mods: Control|Shift, action: Copy }
	  - { key: Q, mods: Control|Shift, action: Quit }
	  - { key: N, mods: Control|Shift, action: SpawnNewInstance }
	  - { key: Return, mods: Control|Shift, action: ToggleFullscreen }
	
	  - { key: Home, chars: "\x1bOH", mode: AppCursor }
	  - { key: Home, chars: "\x1b[H", mode: ~AppCursor }
	  - { key: End, chars: "\x1bOF", mode: AppCursor }
	  - { key: End, chars: "\x1b[F", mode: ~AppCursor }
	  - { key: Equals, mods: Control|Shift, action: IncreaseFontSize }
	  - { key: Minus, mods: Control|Shift, action: DecreaseFontSize }
	  - { key: Minus, mods: Command|Shift, action: ResetFontSize }
	  - { key: PageUp, mods: Shift, chars: "\x1b[5;2~" }
	  - { key: PageUp, mods: Control, chars: "\x1b[5;5~" }
	  - { key: PageUp, chars: "\x1b[5~" }
	  - { key: PageDown, mods: Shift, chars: "\x1b[6;2~" }
	  - { key: PageDown, mods: Control, chars: "\x1b[6;5~" }
	  - { key: PageDown, chars: "\x1b[6~" }
	  - { key: Left, mods: Shift, chars: "\x1b[1;2D" }
	  - { key: Left, mods: Control, chars: "\x1b[1;5D" }
	  - { key: Left, mods: Alt, chars: "\x1b[1;3D" }
	  - { key: Left, chars: "\x1b[D", mode: ~AppCursor }
	  - { key: Left, chars: "\x1bOD", mode: AppCursor }
	  - { key: Right, mods: Shift, chars: "\x1b[1;2C" }
	  - { key: Right, mods: Control, chars: "\x1b[1;5C" }
	  - { key: Right, mods: Alt, chars: "\x1b[1;3C" }
	  - { key: Right, chars: "\x1b[C", mode: ~AppCursor }
	  - { key: Right, chars: "\x1bOC", mode: AppCursor }
	  - { key: Up, mods: Shift, chars: "\x1b[1;2A" }
	  - { key: Up, mods: Control, chars: "\x1b[1;5A" }
	  - { key: Up, mods: Alt, chars: "\x1b[1;3A" }
	  - { key: Up, chars: "\x1b[A", mode: ~AppCursor }
	  - { key: Up, chars: "\x1bOA", mode: AppCursor }
	  - { key: Down, mods: Shift, chars: "\x1b[1;2B" }
	  - { key: Down, mods: Control, chars: "\x1b[1;5B" }
	  - { key: Down, mods: Alt, chars: "\x1b[1;3B" }
	  - { key: Down, chars: "\x1b[B", mode: ~AppCursor }
	  - { key: Down, chars: "\x1bOB", mode: AppCursor }
	  - { key: Tab, mods: Shift, chars: "\x1b[Z" }
	  - { key: F1, chars: "\x1bOP" }
	  - { key: F2, chars: "\x1bOQ" }
	  - { key: F3, chars: "\x1bOR" }
	  - { key: F4, chars: "\x1bOS" }
	  - { key: F5, chars: "\x1b[15~" }
	  - { key: F6, chars: "\x1b[17~" }
	  - { key: F7, chars: "\x1b[18~" }
	  - { key: F8, chars: "\x1b[19~" }
	  - { key: F9, chars: "\x1b[20~" }
	  - { key: F10, chars: "\x1b[21~" }
	  - { key: F11, chars: "\x1b[23~" }
	  - { key: F12, chars: "\x1b[24~" }
	  - { key: Back, chars: "\x7f" }
	  - { key: Back, mods: Alt, chars: "\x1b\x7f" }
	  - { key: Insert, chars: "\x1b[2~" }
	  - { key: Delete, chars: "\x1b[3~" }
	
	    # # shortcuts for tmux. the leader key is control-b (0x02)
	  # - { key: W, mods: Command, chars: "\x02&" } # close tab (kill)
	  # - { key: T, mods: Command, chars: "\x02c" } # new tab
	  # - { key: RBracket, mods: Command|Shift, chars: "\x02n" } # select next tab
	  # - { key: LBracket, mods: Command|Shift, chars: "\x02p" } # select previous tab
	  # - { key: RBracket, mods: Command, chars: "\x02o" } # select next pane
	  # - { key: LBracket, mods: Command, chars: "\x02;" } # select last (previously used) pane
	  # - { key: F, mods: Command, chars: "\x02/" } # search (upwards) (see tmux.conf)
	
	mouse:
	  # Click settings
	  #
	  # The `double_click` and `triple_click` settings control the time
	  # alacritty should wait for accepting multiple clicks as one double
	  # or triple click.
	  double_click: { threshold: 300 }
	  triple_click: { threshold: 300 }
	
	  # If this is `true`, the cursor is temporarily hidden when typing.
	  hide_when_typing: true
	
	  # URL launcher
	  # url:
	  # This program is executed when clicking on a text which is recognized as a URL.
	  # The URL is always added to the command as the last parameter.
	  #
	  # When set to `None`, URL launching will be disabled completely.
	  #
	  # Default:
	  #   - (macOS) open
	  #   - (Linux) xdg-open
	  #   - (Windows) explorer
	  # launcher:
	  #   program: xdg-open
	  #   args: []
	
	  # These are the modifiers that need to be held down for opening URLs when clicking
	  # on them. The available modifiers are documented in the key binding section.
	  # modifiers: Control|Shift
	
	selection:
	  semantic_escape_chars: ',│`|:"'' ()[]{}<>'
	
	  # When set to `true`, selected text will be copied to the primary clipboard.
	  save_to_clipboard: false
	
	# Mouse bindings
	#
	# Available fields:
	# - mouse
	# - action
	# - mods (optional)
	#
	# Values for `mouse`:
	# - Middle
	# - Left
	# - Right
	# - Numeric identifier such as `5`
	#
	# All available `mods` and `action` values are documented in the key binding
	# section.
	mouse_bindings:
	  - { mouse: Middle, action: PasteSelection }
	
	cursor:
	  # Cursor style
	  #
	  # Values for 'style':
	  #   - ▇ Block
	  #   - _ Underline
	  #   - | Beam
	  style: Block
	
	  # If this is `true`, the cursor will be rendered as a hollow box when the
	  # window is not focused.
	  unfocused_hollow: true
	
	# dynamic_title: false
	
	# Live config reload (changes require restart)
	live_config_reload: true
	
	# Shell
	#
	# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
	# Entries in shell.args are passed unmodified as arguments to the shell.
	shell:
	  program: /usr/local/homebrew/bin/fish
	  args:
	    - --command=tmux
	
	debug:
	  # Should display the render timer
	  render_timer: false
	
	  # Keep the log file after quitting Alacritty.
	  persistent_logging: false
	
	  # Log level
	  #
	  # Values for `log_level`:
	  #   - None
	  #   - Error
	  #   - Warn
	  #   - Info
	  #   - Debug
	  #   - Trace
	  log_level: None
	
	  # Print all received window events.
	  print_events: false
	
	  # Record all characters and escape sequences as test data.
	  ref_test: false
	# vim: nospell
	
b896aa1967883ee4d338b872673a8309|file:///home/quang/.config/alacritty/alacritty.yml|132|1|V|yaml
	bell:
	  animation: EaseOutExpo
	  color: "0xffffff"
	  duration: 0
eead5db12cbe2a91c479a46957444713|file:///home/quang/.config/alacritty/alacritty.yml|121|1|V|yaml
	  startup_mode: Windowed
5022b18b6799507ae9a9b390e0fe6586|file:///home/quang/.config/alacritty/alacritty.yml|391|1|V|yaml
	  # Print all received window events.
	  print_events: false
	
	  # Record all characters and escape sequences as test data.
	  ref_test: false
	# vim: nospell
af9f6d29a34c311643a27930dbb4bf2f|file:///home/quang/.config/alacritty/alacritty.yml|83|1|V|yaml
	window:
	  # Window dimensions (changes require restart)
	  #
	  # Specified in number of columns/lines, not pixels. If both are zero this
	  # setting is ignored.
	  dimensions:
	    columns: 100
	    lines: 85
	
	  # Window padding (changes require restart)
	  #
	  # Blank space added around the window in pixels. This padding is not scaled by
	  # DPI and the specified value is always added at both opposing sides.
	  padding:
	    x: 0
	    y: 0
	
	  # Spread additional padding evenly around the terminal content.
	  dynamic_padding: false
	
	  # Window decorations
	  #
	  # Available values:
	  # - full: borders and title bar
	  # - none: neither borders nor title bar
	  # - transparent: title bar, transparent background and title bar buttons
	  # - buttonless: title bar, transparent background, but no title bar buttons
	  decorations: full
	
	  # Startup Mode (changes require restart)
	  #
	  # Values for `startup_mode`:
	  #   - Windowed
	  #   - Maximized
	  #   - Fullscreen
	  #
	  # Values for `startup_mode` (macOS only):
	  #   - SimpleFullscreen
	
cd3796b72918f9bb824342f120290b26|file:///home/quang/.config/alacritty/alacritty_old.yml|94|1|V|yaml
	window:
	  # Window dimensions (changes require restart)
	  #
	  # Specified in number of columns/lines, not pixels. If both are zero this
	  # setting is ignored.
	  dimensions:
	    columns: 100
	    lines: 85
	
	  # Window padding (changes require restart)
	  #
	  # Blank space added around the window in pixels. This padding is not scaled by
	  # DPI and the specified value is always added at both opposing sides.
	  padding:
	    x: 0
	    y: 0
	
	  # Spread additional padding evenly around the terminal content.
	  dynamic_padding: false
	
	  # Window decorations
	  #
	  # Available values:
	  # - full: borders and title bar
	  # - none: neither borders nor title bar
	  # - transparent: title bar, transparent background and title bar buttons
	  # - buttonless: title bar, transparent background, but no title bar buttons
	  decorations: full
	
	  # Startup Mode (changes require restart)
	  #
	  # Values for `startup_mode`:
	  #   - Windowed
	  #   - Maximized
	  #   - Fullscreen
	  #
	  # Values for `startup_mode` (macOS only):
	  #   - SimpleFullscreen
	  startup_mode: Windowed
	
	scrolling:
	  # maximum number of lines in the scrollback buffer. Specifying '0' will
	  # disable scrolling.
	  history: 0
	
	  # Number of lines the viewport will move for every line scrolled when
	  # scrollback is enabled (history > 0).
	  multiplier: 3
	
	bell:
	  animation: EaseOutExpo
	  color: "0xffffff"
	  duration: 0
	
	# Key bindings
	#
	# Key bindings are specified as a list of objects. Each binding will specify a
	# key and modifiers required to trigger it, terminal modes where the binding is
	# applicable, and what should be done when the key binding fires. It can either
	# send a byte sequence to the running application (`chars`), execute a
	# predefined action (`action`) or fork and execute a specified command plus
	# arguments (`command`).
	#
	# Bindings are always filled by default, but will be replaced when a new binding
	# with the same triggers is defined. To unset a default binding, it can be
	# mapped to the `None` action.
	#
	# Example:
	#   `- { key: V, mods: Control|Shift, action: Paste }`
	#
	# Available fields:
	#   - key
	#   - mods (optional)
	#   - chars | action | command (exactly one required)
	#   - mode (optional)
	#
	# Values for `key`:
	#   - `A` -> `Z`
	#   - `F1` -> `F12`
	#   - `Key1` -> `Key0`
	#
	#   A full list with available key codes can be found here:
	#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
	#
	#   Instead of using the name of the keys, the `key` field also supports using
	#   the scancode of the desired key. Scancodes have to be specified as a
	#   decimal number.
	#   This command will allow you to display the hex scancodes for certain keys:
	#     `showkey --scancodes`
	#
	# Values for `mods`:
	#   - Command
	#   - Control
	#   - Option
	#   - Super
	#   - Shift
	#   - Alt
	#
	#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
	#   Whitespace and capitalization is relevant and must match the example.
	#
	# Values for `chars`:
	#   The `chars` field writes the specified string to the terminal. This makes
	#   it possible to pass escape sequences.
	#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
	#   the command `showkey -a` outside of tmux.
	#   Note that applications use terminfo to map escape sequences back to
	#   keys. It is therefore required to update the terminfo when
	#   changing an escape sequence.
	#
	# Values for `action`:
	#   - Paste
	#   - PasteSelection
	#   - Copy
	#   - IncreaseFontSize
	#   - DecreaseFontSize
	#   - ResetFontSize
	#   - ScrollPageUp
	#   - ScrollPageDown
	#   - ScrollLineUp
	#   - ScrollLineDown
	#   - ScrollToTop
	#   - ScrollToBottom
	#   - ClearHistory
	#   - Hide
	#   - Quit
	#   - ClearLogNotice
	#   - SpawnNewInstance
	#   - ToggleFullscreen
	#   - None
	#
	# Values for `action` (macOS only):
	#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
	#
	# Values for `command`:
	#   The `command` field must be a map containing a `program` string and
	#   an `args` array of command line parameter strings.
	#
	#   Example:
	#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
	#
	# Values for `mode`:
	#   - ~AppCursor
	#   - AppCursor
	#   - ~AppKeypad
	#   - AppKeypad
	#
	key_bindings:
	  - { key: V, mods: Control|Shift, action: Paste }
	  - { key: C, mods: Control|Shift, action: Copy }
	  - { key: Q, mods: Control|Shift, action: Quit }
	  - { key: N, mods: Control|Shift, action: SpawnNewInstance }
	  - { key: Return, mods: Control|Shift, action: ToggleFullscreen }
	
	  - { key: Home, chars: "\x1bOH", mode: AppCursor }
	  - { key: Home, chars: "\x1b[H", mode: ~AppCursor }
	  - { key: End, chars: "\x1bOF", mode: AppCursor }
	  - { key: End, chars: "\x1b[F", mode: ~AppCursor }
	  - { key: Equals, mods: Control|Shift, action: IncreaseFontSize }
	  - { key: Minus, mods: Control|Shift, action: DecreaseFontSize }
	  - { key: Minus, mods: Command|Shift, action: ResetFontSize }
	  - { key: PageUp, mods: Shift, chars: "\x1b[5;2~" }
	  - { key: PageUp, mods: Control, chars: "\x1b[5;5~" }
	  - { key: PageUp, chars: "\x1b[5~" }
	  - { key: PageDown, mods: Shift, chars: "\x1b[6;2~" }
	  - { key: PageDown, mods: Control, chars: "\x1b[6;5~" }
	  - { key: PageDown, chars: "\x1b[6~" }
	  - { key: Left, mods: Shift, chars: "\x1b[1;2D" }
	  - { key: Left, mods: Control, chars: "\x1b[1;5D" }
	  - { key: Left, mods: Alt, chars: "\x1b[1;3D" }
	  - { key: Left, chars: "\x1b[D", mode: ~AppCursor }
	  - { key: Left, chars: "\x1bOD", mode: AppCursor }
	  - { key: Right, mods: Shift, chars: "\x1b[1;2C" }
	  - { key: Right, mods: Control, chars: "\x1b[1;5C" }
	  - { key: Right, mods: Alt, chars: "\x1b[1;3C" }
	  - { key: Right, chars: "\x1b[C", mode: ~AppCursor }
	  - { key: Right, chars: "\x1bOC", mode: AppCursor }
	  - { key: Up, mods: Shift, chars: "\x1b[1;2A" }
	  - { key: Up, mods: Control, chars: "\x1b[1;5A" }
	  - { key: Up, mods: Alt, chars: "\x1b[1;3A" }
	  - { key: Up, chars: "\x1b[A", mode: ~AppCursor }
	  - { key: Up, chars: "\x1bOA", mode: AppCursor }
	  - { key: Down, mods: Shift, chars: "\x1b[1;2B" }
	  - { key: Down, mods: Control, chars: "\x1b[1;5B" }
	  - { key: Down, mods: Alt, chars: "\x1b[1;3B" }
	  - { key: Down, chars: "\x1b[B", mode: ~AppCursor }
	  - { key: Down, chars: "\x1bOB", mode: AppCursor }
	  - { key: Tab, mods: Shift, chars: "\x1b[Z" }
	  - { key: F1, chars: "\x1bOP" }
	  - { key: F2, chars: "\x1bOQ" }
	  - { key: F3, chars: "\x1bOR" }
	  - { key: F4, chars: "\x1bOS" }
	  - { key: F5, chars: "\x1b[15~" }
	  - { key: F6, chars: "\x1b[17~" }
	  - { key: F7, chars: "\x1b[18~" }
	  - { key: F8, chars: "\x1b[19~" }
	  - { key: F9, chars: "\x1b[20~" }
	  - { key: F10, chars: "\x1b[21~" }
	  - { key: F11, chars: "\x1b[23~" }
	  - { key: F12, chars: "\x1b[24~" }
	  - { key: Back, chars: "\x7f" }
	  - { key: Back, mods: Alt, chars: "\x1b\x7f" }
	  - { key: Insert, chars: "\x1b[2~" }
	  - { key: Delete, chars: "\x1b[3~" }
cadebd0e12e8197cba12653e775970a8|file:///home/quang/.config/alacritty/alacritty_old.yml|308|1|V|yaml
	mouse:
	  # Click settings
	  #
	  # The `double_click` and `triple_click` settings control the time
	  # alacritty should wait for accepting multiple clicks as one double
	  # or triple click.
	  double_click: { threshold: 300 }
	  triple_click: { threshold: 300 }
	
	  # If this is `true`, the cursor is temporarily hidden when typing.
	  hide_when_typing: true
	
	  # URL launcher
	  # url:
	  # This program is executed when clicking on a text which is recognized as a URL.
	  # The URL is always added to the command as the last parameter.
	  #
	  # When set to `None`, URL launching will be disabled completely.
	  #
	  # Default:
	  #   - (macOS) open
	  #   - (Linux) xdg-open
	  #   - (Windows) explorer
	  # launcher:
	  #   program: xdg-open
	  #   args: []
	
	  # These are the modifiers that need to be held down for opening URLs when clicking
	  # on them. The available modifiers are documented in the key binding section.
	  # modifiers: Control|Shift
	
	selection:
	  semantic_escape_chars: ',│`|:"'' ()[]{}<>'
	
	  # When set to `true`, selected text will be copied to the primary clipboard.
	  save_to_clipboard: false
	
	# Mouse bindings
	#
	# Available fields:
	# - mouse
	# - action
	# - mods (optional)
	#
	# Values for `mouse`:
	# - Middle
	# - Left
	# - Right
	# - Numeric identifier such as `5`
	#
	# All available `mods` and `action` values are documented in the key binding
	# section.
ccbe6019c18fbf9ef8e0a20dde65b966|file:///home/quang/.config/alacritty/alacritty_old.yml|339|1|V|yaml
	selection:
	  semantic_escape_chars: ',│`|:"'' ()[]{}<>'
	
	  # When set to `true`, selected text will be copied to the primary clipboard.
	  save_to_clipboard: false
	
	# Mouse bindings
	#
	# Available fields:
	# - mouse
	# - action
	# - mods (optional)
	#
	# Values for `mouse`:
	# - Middle
	# - Left
	# - Right
	# - Numeric identifier such as `5`
	#
	# All available `mods` and `action` values are documented in the key binding
	# section.
	mouse_bindings:
	  - { mouse: Middle, action: PasteSelection }
	
4114186701f9e8e18497d3fb4d4e5f0e|file:///home/quang/.config/alacritty/alacritty_old.yml|363|1|V|yaml
	cursor:
	  # Cursor style
	  #
	  # Values for 'style':
	  #   - ▇ Block
	  #   - _ Underline
	  #   - | Beam
	  style: Block
	
	  # If this is `true`, the cursor will be rendered as a hollow box when the
	  # window is not focused.
	  unfocused_hollow: true
	
	# dynamic_title: false
	
	# Live config reload (changes require restart)
	live_config_reload: true
	
	# Shell
	#
	# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
	# Entries in shell.args are passed unmodified as arguments to the shell.
da0d7fe1e71d543d0a003580e9196eb1|file:///home/quang/.config/alacritty/alacritty_old.yml|385|1|V|yaml
	shell:
	  program: /usr/local/homebrew/bin/fish
	  args:
	    - --command=tmux
	
	debug:
	  # Should display the render timer
	  render_timer: false
	
	  # Keep the log file after quitting Alacritty.
	  persistent_logging: false
	
	  # Log level
	  #
	  # Values for `log_level`:
	  #   - None
	  #   - Error
	  #   - Warn
	  #   - Info
	  #   - Debug
	  #   - Trace
	  log_level: None
	
	  # Print all received window events.
	  print_events: false
	
	  # Record all characters and escape sequences as test data.
	  ref_test: false
	# vim: nospell
	
df19ea38067a4999f0c74a3fc5128a1e|file:///home/quang/.config/alacritty/alacritty.yml|360|1|V|yaml
	shell:
	  program: /usr/bin/zsh
	  args:
	    - --command=tmux
8be96bb878bf8b7a6efe13b271f5a7fa|file:///home/quang/.config/nvim/init.vim|8|1|V|vim
	hi Normal ctermbg=NONE guibg=NONE
	hi NonText ctermbg=NONE guifg=NONE guibg=NONE ctermfg=NONE
	let t:is_transparent = 1
069f1dddf2955d273bc49565ba329526|file:///home/quang/test.java|1|13|V|java
	import java.s
29e6da7c92e95c3e4730ce4f9a7b1b8c|file:///home/quang/test.java|1|1|V|java
	public static void name() {
	    
	}
b068931cc450442b63f5b3d276ea4297|file:///home/quang/test.java|2|24|v|java
	name
828bd3740126aa9145190b9f54cfb92a|file:///home/quang/test.java|3|34|V|java
	        System.System.out.println();
1da215a9a85e51d22df926f392611aac|file:///home/quang/test.java|3|24|V|java
	       System.out.println("Hello World");
e7fa03e247d45dd96b0775355a070e59|file:///home/quang/test.java|4|8|v|java
	System.
ff8ebedd39f57ef61955ca61a1bf6093|file:///home/quang/test.java|1|14|V|java
	import java.if
1bd1324125fdcb1e4e47056bb57bc631|file:///home/quang/test.java|1|1|V|java
	import java.awt.font.*;
6087e7fb8581d2761ca7209bef765a1c|file:///home/quang/.config/nvim/themes/nvcode.vim|9|1|V|vim
	hi Normal guibg=NONE ctermbg=NONE
	hi NonText ctermbg=NONE guibg=NONE guifg=NONE ctermfg=NONE
9cb94c68ab72a7b3f11af61f7e9c093e|file:///home/quang/.config/nvim/coc-settings.json|44|1|V|json
	  // "python.formatting.blackPath": "~/.local/bin/black",
	  // "python.linting.pylintPath": "~/.miniconda/envs/neovim/bin/pylint",
a853bec9768c52e924b16d12dc54807c|file:///home/quang/handsonml/test.py|1|11|V|python
	import nump
590f53e8699817c6fa498cc11a4cbe63|file:///home/quang/handsonml/bfs.py|6|34|v|python
	self
55d189a35b6cbb1d109c923f12ece034|file:///home/quang/handsonml/bfs.py|30|1|V|python
	g.addEdge(0, 1)
647f1f9b6a84441a092e8f265077ccbe|file:///home/quang/handsonml/test.py|9|1|V|python
	print(type(X_valid))
0f1891663fe7e1c22830a861272497f4|file:///home/quang/handsonml/test.py|12|1|V|python
	print(class_names[y_train[0]])
7ee3005167dc1b9ba76b920224c45ed1|file:///home/quang/handsonml/test.py|1|1|V|python
	from tensorflow import keras
	
	fashion_mnist = keras.datasets.fashion_mnist
	(X_train_full, y_train_full), (X_test, y_test) = fashion_mnist.load_data()
	
	X_valid, X_train = X_train_full[:5000] / 255.0, X_train_full[5000:] / 255.0
	y_valid, y_train = y_train_full[:5000] / 255.0, y_train_full[5000:] / 255.0
	
	class_names = ["T-shirt/top", "Trouser", "Pullover", "Dress", "Coat",
	               "Sandal", "Shirt", "Sneaker", "Bag", "Ankle boot"]
	
	
	model = keras.models.Sequential()
	model.add(keras.layers.Flatten(input_shape=[28,28]))
	
75177cc1960d28ca227a2bec030ea63d|file:///home/quang/i3/.config/i3|1|1|V|
	## quick terminal
	# Add this to your i3 config (~/.config/i3/config) and restart i3 (Super+Shift+R)
	exec --no-startup-id "alacritty"
	for_window [class="Alacritty"] move scratchpad, move position 150 150, resize set 1700 800;
	bindsym Mod1+space [class="Alacritty"] scratchpad show;
	
	# (No) Title Bars
	for_window [class="^.*"] border pixel 0
	
	# Gaps
	#gaps inner 10
	#gaps outer 0
	#smart_gaps on
	
	# Assign workspaces to screens
	#  On E560, eDP-1 is the first display, while DP-2 is VGA output
	#workspace 1 output eDP-1
	#workspace 2 output eDP-1
	#workspace 3 output eDP-1
	#workspace 4 output eDP-1
	#workspace 5 output DP-2
	#workspace 6 output DP-2
	#workspace 7 output DP-2
	#workspace 8 output DP-2
	
	# Assign applications to workspaces
	#  xprop | grep "CLASS"
	#assign [class="Firefox"] 1
	#assign [class="sublime_text"] 2
	
	set $black       #212121
	set $darkblack   #000000
	set $red         #fb4934
	set $darkred     #cc241d
	set $green       #b8bb26
	set $darkgreen   #98971a
	set $yellow      #fabd2f
	set $darkyellow  #d79921
	set $blue        #83a598
	set $darkblue    #458588
	set $magenta     #d3869b
	set $darkmagenta #b16286
	set $cyan        #8ec07c
	set $darkcyan    #689d6a
	set $white       #ebdbb2
	set $darkwhite   #a89984
	set $background  #000000
	set $transparent #00000000
	
	# Windows button
	set $mod Mod4
	
	# Font for window titles. Will also be used by the bar unless a different font
	# is used in the bar {} block below.
	font pango:Helvetica Neue, FontAwesome 11
	 
	# This font is widely installed, provides lots of unicode glyphs, right-to-left
	# text rendering and scalability on retina/hidpi displays (thanks to pango).
	#font pango:DejaVu Sans Mono 8
	
	# Use Mouse+$mod to drag floating windows to their wanted position
	floating_modifier $mod
	
	# Start a terminal
	bindsym $mod+Return exec konsole
	
	# Kill focused window
	bindsym $mod+Shift+q kill
	
	# Move workspace to another display
	bindsym $mod+x move workspace to output right
	
	# rofi
	bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu='rofi -i -dmenu -font "Inter 17" '
	
	# Screenshot (now provided by Plasma)
	# bindsym Print exec --no-startup-id spectacle
	
	# shipping a .desktop file. It is a wrapper around dmenu, so you need that
	# installed.
	# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
	
	# change focus
	bindsym $mod+j focus left
	bindsym $mod+k focus down
	bindsym $mod+l focus up
	bindsym $mod+semicolon focus right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right
	
	# move focused window
	bindsym $mod+Shift+j move left
	bindsym $mod+Shift+k move down
	bindsym $mod+Shift+l move up
	bindsym $mod+Shift+semicolon move right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right
	
	# bindsym $mod+space exec rofi -show run
	
	# split in horizontal orientation
	bindsym $mod+h split v
	
	# split in vertical orientation
	bindsym $mod+v split h
	
	# enter fullscreen mode for the focused container
	bindsym $mod+f fullscreen toggle
	
	# change container layout (stacked, tabbed, toggle split)
	bindsym $mod+s layout stacking
	bindsym $mod+w layout tabbed
	bindsym $mod+e layout toggle split
	
	# toggle tiling / floating
	bindsym $mod+Shift+space floating toggle
	
	# change focus between tiling / floating windows
	bindsym $mod+space focus mode_toggle
	
	# focus the parent container
	bindsym $mod+a focus parent
	
	# focus the child container
	#bindsym $mod+d focus child
	
	# switch to workspace
	bindsym $mod+1 workspace 1
	bindsym $mod+2 workspace 2
	bindsym $mod+3 workspace 3
	bindsym $mod+4 workspace 4
	bindsym $mod+5 workspace 5
	bindsym $mod+6 workspace 6
	bindsym $mod+7 workspace 7
	bindsym $mod+8 workspace 8
	bindsym $mod+9 workspace 9
	bindsym $mod+0 workspace 10
	
	# move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace 1
	bindsym $mod+Shift+2 move container to workspace 2
	bindsym $mod+Shift+3 move container to workspace 3
	bindsym $mod+Shift+4 move container to workspace 4
	bindym $mod+Shift+5 move container to workspace 5
	bindsym $mod+Shift+6 move container to workspace 6
	bindsym $mod+Shift+7 move container to workspace 7
	bindsym $mod+Shift+8 move container to workspace 8
	bindsym $mod+Shift+9 move container to workspace 9
	bindsym $mod+Shift+0 move container to workspace 10
	
	# Move focus between screens
	bindsym $mod+Alt+h focus output left
	bindsym $mod+Alt+Left focus output left
	bindsym $mod+Alt+l focus output right
	bindsym $mod+Alt+Right focus output right
	
	# reload the configuration file
	bindsym $mod+Shift+c reload
	# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
	bindsym $mod+Shift+r restart
	# exit i3 (logs you out of your X session)
	bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
	
	# Audio controls (now provided by Plasma)
	# bindsym XF86AudioLowerVolume exec ~/audio.sh --down
	# bindsym XF86AudioRaiseVolume exec ~/audio.sh --up
	
	# resize window (you can also use the mouse for that)
	mode "resize" {
	        # These bindings trigger as soon as you enter the resize mode
	
	        # Pressing left will shrink the window’s width.
	        # Pressing right will grow the window’s width.
	        # Pressing up will shrink the window’s height.
	        # Pressing down will grow the window’s height.
	        bindsym j resize shrink width 10 px or 5 ppt
	        bindsym k resize grow height 10 px or 5 ppt
	        bindsym l resize shrink height 10 px or 5 ppt
	        bindsym semicolon resize grow width 10 px or 5 ppt
	
	        # same bindings, but for the arrow keys
	        bindsym Left resize shrink width 10 px or 5 ppt
	        bindsym Down resize grow height 10 px or 5 ppt
	        bindsym Up resize shrink height 10 px or 5 ppt
	        bindsym Right resize grow width 10 px or 5 ppt
	
	        # back to normal: Enter or Escape
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	bindsym $mod+r mode "resize"
	
	# i3bar
	#bar {
	#        verbose yes
	#        position bottom 
	#        status_command i3blocks
	#        i3bar_command i3bar -t
	#        colors {
	#          statusline #ffffff
	#          background $transparent
	#        }
	#}
	
	# Applications behaving as "pop ups" are set to be always floating
	#  i.e. popup, do stuff, close
	# To get WM_CLASS and WM_TITLE values, on X run "xprop"
	for_window [class="yakuake"] floating enable
	for_window [class="systemsettings"] floating enable
	for_window [class="keepassxc"] floating enable
	
	# Set wallpaper with feh
	exec --no-startup-id feh --bg-fill ~/Pictures/wallpapers/space1.jpg
	
	## Plasma Integration
	# Try to kill the wallpaper set by Plasma (it takes up the entire workspace and hides everythiing)
	exec --no-startup-id wmctrl -c Plasma
	for_window [title="Desktop — Plasma"] kill, floating enable, border none
	for_window [title="Bureau — Plasma"] kill, floating enable, border none
	
	## Avoid tiling popups, dropdown windows from plasma
	# for the first time, manually resize them, i3 will remember the setting for floating windows
	for_window [class="plasmashell"] floating enable
	for_window [class="Plasma"] floating enable, border none
	for_window [title="plasma-desktop"] floating enable, border none
	for_window [title="win7"] floating enable, border none
	for_window [class="krunner"] floating enable, border none
	for_window [class="Kmix"] floating enable, border none
	for_window [class="Klipper"] floating enable, border none
	for_window [class="Plasmoidviewer"] floating enable, border none
	
	### i3-gaps stuff ###
	
	# Necessary for i3-gaps to work properly (pixel can be any value)
	for_window [class="^.*"] border pixel 0
	
	# Smart Gaps
	# smart_gaps on
	
	# Smart Borders
	smart_borders on
	
	# Set inner/outer gaps
	gaps inner 8
	gaps outer 0
	
	# Gaps mode
	set $mode_gaps Gaps: (o) outer, (i) inner
	set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
	set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
	bindsym $mod+Shift+g mode "$mode_gaps"
	
	mode "$mode_gaps" {
	        bindsym o      mode "$mode_gaps_outer"
	        bindsym i      mode "$mode_gaps_inner"
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	mode "$mode_gaps_inner" {
	        bindsym plus  gaps inner current plus 5
	        bindsym minus gaps inner current minus 5
	        bindsym 0     gaps inner current set 0
	
	        bindsym Shift+plus  gaps inner all plus 5
	        bindsym Shift+minus gaps inner all minus 5
	        bindsym Shift+0     gaps inner all set 0
	
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	mode "$mode_gaps_outer" {
	        bindsym plus  gaps outer current plus 5
	        bindsym minus gaps outer current minus 5
	        bindsym 0     gaps outer current set 0
	
	        bindsym Shift+plus  gaps outer all plus 5
	        bindsym Shift+minus gaps outer all minus 5
	        bindsym Shift+0     gaps outer all set 0
	
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	s
bf935b82e4b6d53c2f4c4da13d1291b6|file:///home/quang/i3/.config/i3/config|222|38|v|conf
	wallpapers/space1.jpg
7a807d5ba7389a455bacb64072a78142|file:///home/quang/i3/.config/i3/config|1|1|V|conf
	## quick terminal
	# Add this to your i3 config (~/.config/i3/config) and restart i3 (Super+Shift+R)
	exec --no-startup-id "alacritty"
	for_window [class="Alacritty"] move scratchpad, move position 150 150, resize set 1700 800;
	bindsym Mod1+space [class="Alacritty"] scratchpad show;
	
	# (No) Title Bars
	for_window [class="^.*"] border pixel 0
	
	# Gaps
	#gaps inner 10
	#gaps outer 0
	#smart_gaps on
	
	# Assign workspaces to screens
	#  On E560, eDP-1 is the first display, while DP-2 is VGA output
	#workspace 1 output eDP-1
	#workspace 2 output eDP-1
	#workspace 3 output eDP-1
	#workspace 4 output eDP-1
	#workspace 5 output DP-2
	#workspace 6 output DP-2
	#workspace 7 output DP-2
	#workspace 8 output DP-2
	
	# Assign applications to workspaces
	#  xprop | grep "CLASS"
	#assign [class="Firefox"] 1
	#assign [class="sublime_text"] 2
	
	set $black       #212121
	set $darkblack   #000000
	set $red         #fb4934
	set $darkred     #cc241d
	set $green       #b8bb26
	set $darkgreen   #98971a
	set $yellow      #fabd2f
	set $darkyellow  #d79921
	set $blue        #83a598
	set $darkblue    #458588
	set $magenta     #d3869b
	set $darkmagenta #b16286
	set $cyan        #8ec07c
	set $darkcyan    #689d6a
	set $white       #ebdbb2
	set $darkwhite   #a89984
	set $background  #000000
	set $transparent #00000000
	
	# Windows button
	set $mod Mod4
	
	# Font for window titles. Will also be used by the bar unless a different font
	# is used in the bar {} block below.
	font pango:Helvetica Neue, FontAwesome 11
	 
	# This font is widely installed, provides lots of unicode glyphs, right-to-left
	# text rendering and scalability on retina/hidpi displays (thanks to pango).
	#font pango:DejaVu Sans Mono 8
	
	# Use Mouse+$mod to drag floating windows to their wanted position
	floating_modifier $mod
	
	# Start a terminal
	bindsym $mod+Return exec konsole
	
	# Kill focused window
	bindsym $mod+Shift+q kill
	
	# Move workspace to another display
	bindsym $mod+x move workspace to output right
	
	# rofi
	bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu='rofi -i -dmenu -font "Inter 17" '
	
	# Screenshot (now provided by Plasma)
	# bindsym Print exec --no-startup-id spectacle
	
	# shipping a .desktop file. It is a wrapper around dmenu, so you need that
	# installed.
	# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
	
	# change focus
	bindsym $mod+j focus left
	bindsym $mod+k focus down
	bindsym $mod+l focus up
	bindsym $mod+semicolon focus right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right
	
	# move focused window
	bindsym $mod+Shift+j move left
	bindsym $mod+Shift+k move down
	bindsym $mod+Shift+l move up
	bindsym $mod+Shift+semicolon move right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right
	
	# bindsym $mod+space exec rofi -show run
	
	# split in horizontal orientation
	bindsym $mod+h split v
	
	# split in vertical orientation
	bindsym $mod+v split h
	
	# enter fullscreen mode for the focused container
	bindsym $mod+f fullscreen toggle
	
	# change container layout (stacked, tabbed, toggle split)
	bindsym $mod+s layout stacking
	bindsym $mod+w layout tabbed
	bindsym $mod+e layout toggle split
	
	# toggle tiling / floating
	bindsym $mod+Shift+space floating toggle
	
	# change focus between tiling / floating windows
	bindsym $mod+space focus mode_toggle
	
	# focus the parent container
	bindsym $mod+a focus parent
	
	# focus the child container
	#bindsym $mod+d focus child
	
	# switch to workspace
	bindsym $mod+1 workspace 1
	bindsym $mod+2 workspace 2
	bindsym $mod+3 workspace 3
	bindsym $mod+4 workspace 4
	bindsym $mod+5 workspace 5
	bindsym $mod+6 workspace 6
	bindsym $mod+7 workspace 7
	bindsym $mod+8 workspace 8
	bindsym $mod+9 workspace 9
	bindsym $mod+0 workspace 10
	
	# move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace 1
	bindsym $mod+Shift+2 move container to workspace 2
	bindsym $mod+Shift+3 move container to workspace 3
	bindsym $mod+Shift+4 move container to workspace 4
	bindym $mod+Shift+5 move container to workspace 5
	bindsym $mod+Shift+6 move container to workspace 6
	bindsym $mod+Shift+7 move container to workspace 7
	bindsym $mod+Shift+8 move container to workspace 8
	bindsym $mod+Shift+9 move container to workspace 9
	bindsym $mod+Shift+0 move container to workspace 10
	
	# Move focus between screens
	bindsym $mod+Alt+h focus output left
	bindsym $mod+Alt+Left focus output left
	bindsym $mod+Alt+l focus output right
	bindsym $mod+Alt+Right focus output right
	
	# reload the configuration file
	bindsym $mod+Shift+c reload
	# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
	bindsym $mod+Shift+r restart
	# exit i3 (logs you out of your X session)
	bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
	
	# Audio controls (now provided by Plasma)
	# bindsym XF86AudioLowerVolume exec ~/audio.sh --down
	# bindsym XF86AudioRaiseVolume exec ~/audio.sh --up
	
	# resize window (you can also use the mouse for that)
	mode "resize" {
	        # These bindings trigger as soon as you enter the resize mode
	
	        # Pressing left will shrink the window’s width.
	        # Pressing right will grow the window’s width.
	        # Pressing up will shrink the window’s height.
	        # Pressing down will grow the window’s height.
	        bindsym j resize shrink width 10 px or 5 ppt
	        bindsym k resize grow height 10 px or 5 ppt
	        bindsym l resize shrink height 10 px or 5 ppt
	        bindsym semicolon resize grow width 10 px or 5 ppt
	
	        # same bindings, but for the arrow keys
	        bindsym Left resize shrink width 10 px or 5 ppt
	        bindsym Down resize grow height 10 px or 5 ppt
	        bindsym Up resize shrink height 10 px or 5 ppt
	        bindsym Right resize grow width 10 px or 5 ppt
	
	        # back to normal: Enter or Escape
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	bindsym $mod+r mode "resize"
	
	# i3bar
	#bar {
	#        verbose yes
	#        position bottom 
	#        status_command i3blocks
	#        i3bar_command i3bar -t
	#        colors {
	#          statusline #ffffff
	#          background $transparent
	#        }
	#}
	
	# Applications behaving as "pop ups" are set to be always floating
	#  i.e. popup, do stuff, close
	# To get WM_CLASS and WM_TITLE values, on X run "xprop"
	for_window [class="yakuake"] floating enable
	for_window [class="systemsettings"] floating enable
	for_window [class="keepassxc"] floating enable
	
	# Set wallpaper with feh
	exec --no-startup-id feh --bg-fill ~/Downloads/747930.png
	
	## Plasma Integration
	# Try to kill the wallpaper set by Plasma (it takes up the entire workspace and hides everythiing)
	exec --no-startup-id wmctrl -c Plasma
	for_window [title="Desktop — Plasma"] kill, floating enable, border none
	for_window [title="Bureau — Plasma"] kill, floating enable, border none
	
	## Avoid tiling popups, dropdown windows from plasma
	# for the first time, manually resize them, i3 will remember the setting for floating windows
	for_window [class="plasmashell"] floating enable
	for_window [class="Plasma"] floating enable, border none
	for_window [title="plasma-desktop"] floating enable, border none
	for_window [title="win7"] floating enable, border none
	for_window [class="krunner"] floating enable, border none
	for_window [class="Kmix"] floating enable, border none
	for_window [class="Klipper"] floating enable, border none
	for_window [class="Plasmoidviewer"] floating enable, border none
	
	### i3-gaps stuff ###
	
	# Necessary for i3-gaps to work properly (pixel can be any value)
	for_window [class="^.*"] border pixel 0
	
	# Smart Gaps
	# smart_gaps on
	
	# Smart Borders
	smart_borders on
	
	# Set inner/outer gaps
	gaps inner 8
	gaps outer 0
	
	# Gaps mode
	set $mode_gaps Gaps: (o) outer, (i) inner
	set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
	set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
	bindsym $mod+Shift+g mode "$mode_gaps"
	
	mode "$mode_gaps" {
	        bindsym o      mode "$mode_gaps_outer"
	        bindsym i      mode "$mode_gaps_inner"
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	mode "$mode_gaps_inner" {
	        bindsym plus  gaps inner current plus 5
	        bindsym minus gaps inner current minus 5
	        bindsym 0     gaps inner current set 0
	
	        bindsym Shift+plus  gaps inner all plus 5
	        bindsym Shift+minus gaps inner all minus 5
	        bindsym Shift+0     gaps inner all set 0
	
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	mode "$mode_gaps_outer" {
	        bindsym plus  gaps outer current plus 5
	        bindsym minus gaps outer current minus 5
	        bindsym 0     gaps outer current set 0
	
	        bindsym Shift+plus  gaps outer all plus 5
	        bindsym Shift+minus gaps outer all minus 5
	        bindsym Shift+0     gaps outer all set 0
	
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	
26499cc27010fd08637568a1195784ce|file:///home/quang/.config/i3/config|1|1|V|i3config
	# This file has been auto-generated by i3-config-wizard(1).
	# It will not be overwritten, so edit it as you like.
	#
	# Should you change your keyboard layout some time, delete
	# this file and re-run i3-config-wizard(1).
	#
	
	# i3 config file (v4)
	#
	# Please see https://i3wm.org/docs/userguide.html for a complete reference!
	
	set $mod Mod4
	
	# Font for window titles. Will also be used by the bar unless a different font
	# is used in the bar {} block below.
	font pango:monospace 8
	
	# This font is widely installed, provides lots of unicode glyphs, right-to-left
	# text rendering and scalability on retina/hidpi displays (thanks to pango).
	#font pango:DejaVu Sans Mono 8
	
	# The combination of xss-lock, nm-applet and pactl is a popular choice, so
	# they are included here as an example. Modify as you see fit.
	
	# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
	# screen before suspend. Use loginctl lock-session to lock your screen.
	exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
	
	# NetworkManager is the most popular way to manage wireless networks on Linux,
	# and nm-applet is a desktop environment-independent system tray GUI for it.
	exec --no-startup-id nm-applet
	
	# Use pactl to adjust volume in PulseAudio.
	set $refresh_i3status killall -SIGUSR1 i3status
	bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
	bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
	bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
	bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
	
	# Use Mouse+$mod to drag floating windows to their wanted position
	floating_modifier $mod
	
	# start a terminal
	bindsym $mod+Return exec i3-sensible-terminal
	
	# kill focused window
	bindsym $mod+Shift+q kill
	
	# start dmenu (a program launcher)
	bindsym $mod+d exec dmenu_run
	# There also is the (new) i3-dmenu-desktop which only displays applications
	# shipping a .desktop file. It is a wrapper around dmenu, so you need that
	# installed.
	# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
	
	# change focus
	bindsym $mod+j focus left
	bindsym $mod+k focus down
	bindsym $mod+l focus up
	bindsym $mod+semicolon focus right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right
	
	# move focused window
	bindsym $mod+Shift+j move left
	bindsym $mod+Shift+k move down
	bindsym $mod+Shift+l move up
	bindsym $mod+Shift+semicolon move right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right
	
	# split in horizontal orientation
	bindsym $mod+h split h
	
	# split in vertical orientation
	bindsym $mod+v split v
	
	# enter fullscreen mode for the focused container
	bindsym $mod+f fullscreen toggle
	
	# change container layout (stacked, tabbed, toggle split)
	bindsym $mod+s layout stacking
	bindsym $mod+w layout tabbed
	bindsym $mod+e layout toggle split
	
	# toggle tiling / floating
	bindsym $mod+Shift+space floating toggle
	
	# change focus between tiling / floating windows
	bindsym $mod+space focus mode_toggle
	
	# focus the parent container
	bindsym $mod+a focus parent
	
	# focus the child container
	#bindsym $mod+d focus child
	
	# Define names for default workspaces for which we configure key bindings later on.
	# We use variables to avoid repeating the names in multiple places.
	set $ws1 "1"
	set $ws2 "2"
	set $ws3 "3"
	set $ws4 "4"
	set $ws5 "5"
	set $ws6 "6"
	set $ws7 "7"
	set $ws8 "8"
	set $ws9 "9"
	set $ws10 "10"
	
	# switch to workspace
	bindsym $mod+1 workspace number $ws1
	bindsym $mod+2 workspace number $ws2
	bindsym $mod+3 workspace number $ws3
	bindsym $mod+4 workspace number $ws4
	bindsym $mod+5 workspace number $ws5
	bindsym $mod+6 workspace number $ws6
	bindsym $mod+7 workspace number $ws7
	bindsym $mod+8 workspace number $ws8
	bindsym $mod+9 workspace number $ws9
	bindsym $mod+0 workspace number $ws10
	
	# move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace number $ws1
	bindsym $mod+Shift+2 move container to workspace number $ws2
	bindsym $mod+Shift+3 move container to workspace number $ws3
	bindsym $mod+Shift+4 move container to workspace number $ws4
	bindsym $mod+Shift+5 move container to workspace number $ws5
	bindsym $mod+Shift+6 move container to workspace number $ws6
	bindsym $mod+Shift+7 move container to workspace number $ws7
	bindsym $mod+Shift+8 move container to workspace number $ws8
	bindsym $mod+Shift+9 move container to workspace number $ws9
	bindsym $mod+Shift+0 move container to workspace number $ws10
	
	# reload the configuration file
	bindsym $mod+Shift+c reload
	# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
	bindsym $mod+Shift+r restart
	# exit i3 (logs you out of your X session)
	bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
	
	# resize window (you can also use the mouse for that)
	mode "resize" {
	        # These bindings trigger as soon as you enter the resize mode
	
	        # Pressing left will shrink the window’s width.
	        # Pressing right will grow the window’s width.
	        # Pressing up will shrink the window’s height.
	        # Pressing down will grow the window’s height.
	        bindsym j resize shrink width 10 px or 10 ppt
	        bindsym k resize grow height 10 px or 10 ppt
	        bindsym l resize shrink height 10 px or 10 ppt
	        bindsym semicolon resize grow width 10 px or 10 ppt
	
	        # same bindings, but for the arrow keys
	        bindsym Left resize shrink width 10 px or 10 ppt
	        bindsym Down resize grow height 10 px or 10 ppt
	        bindsym Up resize shrink height 10 px or 10 ppt
	        bindsym Right resize grow width 10 px or 10 ppt
	
	        # back to normal: Enter or Escape or $mod+r
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	        bindsym $mod+r mode "default"
	}
	
	bindsym $mod+r mode "resize"
	
	# Start i3bar to display a workspace bar (plus the system information i3status
	# finds out, if available)
	bar {
	        status_command i3status
	}
b90888210e4cfdd8579e47f1261de4e6|file:///home/quang/.config/i3/config|1|1|V|i3config
	## quick terminal
	# Add this to your i3 config (~/.config/i3/config) and restart i3 (Super+Shift+R)
	exec --no-startup-id "alacritty"
	for_window [class="Alacritty"] move scratchpad, move position 150 150, resize set 1700 800;
	bindsym Mod1+space [class="Alacritty"] scratchpad show;
	
	# (No) Title Bars
	for_window [class="^.*"] border pixel 0
	
	# Gaps
	#gaps inner 10
	#gaps outer 0
	#smart_gaps on
	
	# Assign workspaces to screens
	#  On E560, eDP-1 is the first display, while DP-2 is VGA output
	#workspace 1 output eDP-1
	#workspace 2 output eDP-1
	#workspace 3 output eDP-1
	#workspace 4 output eDP-1
	#workspace 5 output DP-2
	#workspace 6 output DP-2
	#workspace 7 output DP-2
	#workspace 8 output DP-2
	
	# Assign applications to workspaces
	#  xprop | grep "CLASS"
	#assign [class="Firefox"] 1
	#assign [class="sublime_text"] 2
	
	set $black       #212121
	set $darkblack   #000000
	set $red         #fb4934
	set $darkred     #cc241d
	set $green       #b8bb26
	set $darkgreen   #98971a
	set $yellow      #fabd2f
	set $darkyellow  #d79921
	set $blue        #83a598
	set $darkblue    #458588
	set $magenta     #d3869b
	set $darkmagenta #b16286
	set $cyan        #8ec07c
	set $darkcyan    #689d6a
	set $white       #ebdbb2
	set $darkwhite   #a89984
	set $background  #000000
	set $transparent #00000000
	
	# Windows button
	set $mod Mod4
	
	# Font for window titles. Will also be used by the bar unless a different font
	# is used in the bar {} block below.
	font pango:Helvetica Neue, FontAwesome 11
	 
	# This font is widely installed, provides lots of unicode glyphs, right-to-left
	# text rendering and scalability on retina/hidpi displays (thanks to pango).
	#font pango:DejaVu Sans Mono 8
	
	# Use Mouse+$mod to drag floating windows to their wanted position
	floating_modifier $mod
	
	# Start a terminal
	bindsym $mod+Return exec konsole
	
	# Kill focused window
	bindsym $mod+Shift+q kill
	
	# Move workspace to another display
	bindsym $mod+x move workspace to output right
	
	# rofi
	bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu='rofi -i -dmenu -font "Inter 17" '
	
	# Screenshot (now provided by Plasma)
	# bindsym Print exec --no-startup-id spectacle
	
	# shipping a .desktop file. It is a wrapper around dmenu, so you need that
	# installed.
	# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
	
	# change focus
	bindsym $mod+j focus left
	bindsym $mod+k focus down
	bindsym $mod+l focus up
	bindsym $mod+semicolon focus right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right
	
	# move focused window
	bindsym $mod+Shift+j move left
	bindsym $mod+Shift+k move down
	bindsym $mod+Shift+l move up
	bindsym $mod+Shift+semicolon move right
	
	# alternatively, you can use the cursor keys:
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right
	
	# bindsym $mod+space exec rofi -show run
	
	# split in horizontal orientation
	bindsym $mod+h split v
	
	# split in vertical orientation
	bindsym $mod+v split h
	
	# enter fullscreen mode for the focused container
	bindsym $mod+f fullscreen toggle
	
	# change container layout (stacked, tabbed, toggle split)
	bindsym $mod+s layout stacking
	bindsym $mod+w layout tabbed
	bindsym $mod+e layout toggle split
	
	# toggle tiling / floating
	bindsym $mod+Shift+space floating toggle
	
	# change focus between tiling / floating windows
	bindsym $mod+space focus mode_toggle
	
	# focus the parent container
	bindsym $mod+a focus parent
	
	# focus the child container
	#bindsym $mod+d focus child
	
	# switch to workspace
	bindsym $mod+1 workspace 1
	bindsym $mod+2 workspace 2
	bindsym $mod+3 workspace 3
	bindsym $mod+4 workspace 4
	bindsym $mod+5 workspace 5
	bindsym $mod+6 workspace 6
	bindsym $mod+7 workspace 7
	bindsym $mod+8 workspace 8
	bindsym $mod+9 workspace 9
	bindsym $mod+0 workspace 10
	
	# move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace 1
	bindsym $mod+Shift+2 move container to workspace 2
	bindsym $mod+Shift+3 move container to workspace 3
	bindsym $mod+Shift+4 move container to workspace 4
	bindym $mod+Shift+5 move container to workspace 5
	bindsym $mod+Shift+6 move container to workspace 6
	bindsym $mod+Shift+7 move container to workspace 7
	bindsym $mod+Shift+8 move container to workspace 8
	bindsym $mod+Shift+9 move container to workspace 9
	bindsym $mod+Shift+0 move container to workspace 10
	
	# Move focus between screens
	bindsym $mod+Alt+h focus output left
	bindsym $mod+Alt+Left focus output left
	bindsym $mod+Alt+l focus output right
	bindsym $mod+Alt+Right focus output right
	
	# reload the configuration file
	bindsym $mod+Shift+c reload
	# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
	bindsym $mod+Shift+r restart
	# exit i3 (logs you out of your X session)
	bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
	
	# Audio controls (now provided by Plasma)
	# bindsym XF86AudioLowerVolume exec ~/audio.sh --down
	# bindsym XF86AudioRaiseVolume exec ~/audio.sh --up
	
	# resize window (you can also use the mouse for that)
	mode "resize" {
	        # These bindings trigger as soon as you enter the resize mode
	
	        # Pressing left will shrink the window’s width.
	        # Pressing right will grow the window’s width.
	        # Pressing up will shrink the window’s height.
	        # Pressing down will grow the window’s height.
	        bindsym j resize shrink width 10 px or 5 ppt
	        bindsym k resize grow height 10 px or 5 ppt
	        bindsym l resize shrink height 10 px or 5 ppt
	        bindsym semicolon resize grow width 10 px or 5 ppt
	
	        # same bindings, but for the arrow keys
	        bindsym Left resize shrink width 10 px or 5 ppt
	        bindsym Down resize grow height 10 px or 5 ppt
	        bindsym Up resize shrink height 10 px or 5 ppt
	        bindsym Right resize grow width 10 px or 5 ppt
	
	        # back to normal: Enter or Escape
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	bindsym $mod+r mode "resize"
	
	# i3bar
	#bar {
	#        verbose yes
	#        position bottom 
	#        status_command i3blocks
	#        i3bar_command i3bar -t
	#        colors {
	#          statusline #ffffff
	#          background $transparent
	#        }
	#}
	
	# Applications behaving as "pop ups" are set to be always floating
	#  i.e. popup, do stuff, close
	# To get WM_CLASS and WM_TITLE values, on X run "xprop"
	for_window [class="yakuake"] floating enable
	for_window [class="systemsettings"] floating enable
	for_window [class="keepassxc"] floating enable
	
	# Set wallpaper with feh
	exec --no-startup-id feh --bg-fill ~/Downloads/747930.png
	
	## Plasma Integration
	# Try to kill the wallpaper set by Plasma (it takes up the entire workspace and hides everythiing)
	exec --no-startup-id wmctrl -c Plasma
	for_window [title="Desktop — Plasma"] kill, floating enable, border none
	for_window [title="Bureau — Plasma"] kill, floating enable, border none
	
	## Avoid tiling popups, dropdown windows from plasma
	# for the first time, manually resize them, i3 will remember the setting for floating windows
	for_window [class="plasmashell"] floating enable
	for_window [class="Plasma"] floating enable, border none
	for_window [title="plasma-desktop"] floating enable, border none
	for_window [title="win7"] floating enable, border none
	for_window [class="krunner"] floating enable, border none
	for_window [class="Kmix"] floating enable, border none
	for_window [class="Klipper"] floating enable, border none
	for_window [class="Plasmoidviewer"] floating enable, border none
	
	### i3-gaps stuff ###
	
	# Necessary for i3-gaps to work properly (pixel can be any value)
	for_window [class="^.*"] border pixel 0
	
	# Smart Gaps
	# smart_gaps on
	
	# Smart Borders
	# smart_borders on
	
	# Set inner/outer gaps
	# gaps inner 8
	# gaps outer 0
	
	# Gaps mode
	set $mode_gaps Gaps: (o) outer, (i) inner
	set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
	set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
	bindsym $mod+Shift+g mode "$mode_gaps"
	
	mode "$mode_gaps" {
	        bindsym o      mode "$mode_gaps_outer"
	        bindsym i      mode "$mode_gaps_inner"
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	mode "$mode_gaps_inner" {
	        bindsym plus  gaps inner current plus 5
	        bindsym minus gaps inner current minus 5
	        bindsym 0     gaps inner current set 0
	
	        bindsym Shift+plus  gaps inner all plus 5
	        bindsym Shift+minus gaps inner all minus 5
	        bindsym Shift+0     gaps inner all set 0
	
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	mode "$mode_gaps_outer" {
	        bindsym plus  gaps outer current plus 5
	        bindsym minus gaps outer current minus 5
	        bindsym 0     gaps outer current set 0
	
	        bindsym Shift+plus  gaps outer all plus 5
	        bindsym Shift+minus gaps outer all minus 5
	        bindsym Shift+0     gaps outer all set 0
	
	        bindsym Return mode "default"
	        bindsym Escape mode "default"
	}
	
	
66ec2f1f5c9f12dd41d7a3be2f74650e|file:///home/quang/.config/i3/config|205|40|V|i3config
	exec --no-startup-id notify-send "Welcome back Andrea!" -i ~/.images/icons8-dog-100.png
bb46f44ea21386a1f4ca0bdc286a4133|file:///home/quang/.scripts/wallpapers.sh|1|17|v|sh
	Pictures/wallpapers/space1.jpg
7c6ecaa67bb8acfb1f6eed0f0e4ef954|file:///home/quang/.config/i3/config|200|1|V|i3config
	exec_always --no-startup-id ~/.scripts/monitors.sh
f5ad36ba0c742e772ebdba4242fd96f1|file:///home/quang/.config/i3/config|203|1|V|i3config
	exec --no-startup-id xfce4-power-manager
	
ad993fe9b92159f5d3af06fb97903e0e|file:///home/quang/.config/i3/config|201|22|V|i3config
	exec --no-startup-id betterlockscreen -w dim
f5f5287279988f94253e122b5dea8f5c|file:///home/quang/.config/i3blocks/config|35|1|V|conf
	[new-vpn]
	command=~/.config/i3blocks/blocks/openvpn/openvpn
	interval=1
	label=<span color="#8be9fd"> </span>
35fd3a5de84e74de25997d243ed02113|file:///home/quang/.config/i3/config|32|34|V|i3config
	bindsym $mod+d exec rofi -show drun -columns 3
a8accdda3a9eef997c738e59f656f413|file:///home/quang/.config/i3/config|60|1|V|i3config
	# Split in horizontal orientation
	bindsym $mod+h split h
2e200cdc26b048bd582c23c43f3736e4|file:///home/quang/.config/i3/config|75|1|V|i3config
	# Change focus between tiling / floating windows
	bindsym $mod+space focus mode_toggle
	
	# Focus the parent container
	bindsym $mod+a focus parent
cf3827754a8a4086f2f973c7f37f0825|file:///home/quang/.config/i3/config|76|1|V|i3config
	# move the currently focused window to the scratchpad
	bindsym $mod+Shift+minus move scratchpad
46b63dedeafffe2c6add72b38aeab392|file:///home/quang/.config/i3/config|75|1|V|i3config
	set focus_follow_mouse no 
